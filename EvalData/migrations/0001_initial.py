# Generated by Django 3.2.23 on 2024-01-25 18:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Campaign', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DirectAssessmentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmenttask_activated_by', related_query_name='evaldata_directassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_directassessmenttask_assignedTo', related_query_name='evaldata_directassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmenttask_batchData', related_query_name='evaldata_directassessmenttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmenttask_campaign', related_query_name='evaldata_directassessmenttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmenttask_completed_by', related_query_name='evaldata_directassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmenttask_created_by', related_query_name='evaldata_directassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('marketID', models.CharField(editable=False, max_length=42, unique=True)),
                ('sourceLanguageCode', models.CharField(help_text='(max. 10 characters)', max_length=10, verbose_name='Source language')),
                ('targetLanguageCode', models.CharField(help_text='(max. 10 characters)', max_length=10, verbose_name='Target language')),
                ('domainName', models.CharField(help_text='(max. 20 characters)', max_length=20, verbose_name='Domain name')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_market_activated_by', related_query_name='evaldata_markets', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_market_completed_by', related_query_name='evaldata_markets', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_market_created_by', related_query_name='evaldata_markets', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_market_modified_by', related_query_name='evaldata_markets', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_market_retired_by', related_query_name='evaldata_markets', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('corpusName', models.CharField(help_text='(max. 100 characters)', max_length=100, verbose_name='Corpus name')),
                ('versionInfo', models.CharField(help_text='(max. 20 characters)', max_length=20, verbose_name='Version info')),
                ('source', models.CharField(help_text='(max. 2000 characters)', max_length=2000, verbose_name='Source')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_metadata_activated_by', related_query_name='evaldata_metadatas', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_metadata_completed_by', related_query_name='evaldata_metadatas', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_metadata_created_by', related_query_name='evaldata_metadatas', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='EvalData.market')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_metadata_modified_by', related_query_name='evaldata_metadatas', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_metadata_retired_by', related_query_name='evaldata_metadatas', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
            ],
            options={
                'verbose_name': 'Metadata record',
                'ordering': ['_str_name'],
            },
        ),
        migrations.CreateModel(
            name='ObjectID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeName', models.CharField(db_index=True, help_text='(max. 100 characters)', max_length=100, verbose_name='Type name')),
                ('primaryID', models.CharField(db_index=True, help_text='(max. 50 characters)', max_length=50, verbose_name='Primary ID')),
            ],
        ),
        migrations.CreateModel(
            name='TextPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('itemID', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Item ID')),
                ('itemType', models.CharField(choices=[('SRC', 'Source text'), ('TGT', 'Target text'), ('REF', 'Reference text'), ('BAD', 'Bad reference'), ('CHK', 'Redundant check')], db_index=True, max_length=5, verbose_name='Item type')),
                ('sourceID', models.CharField(help_text='(max. 1000 characters)', max_length=1000, verbose_name='Source ID')),
                ('sourceText', models.TextField(blank=True, verbose_name='Source text')),
                ('targetID', models.CharField(help_text='(max. 1000 characters)', max_length=1000, verbose_name='Target ID')),
                ('targetText', models.TextField(blank=True, verbose_name='Target text')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpair_activated_by', related_query_name='evaldata_textpairs', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpair_completed_by', related_query_name='evaldata_textpairs', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpair_created_by', related_query_name='evaldata_textpairs', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='EvalData.metadata')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpair_modified_by', related_query_name='evaldata_textpairs', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpair_retired_by', related_query_name='evaldata_textpairs', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('itemID', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Item ID')),
                ('itemType', models.CharField(choices=[('SRC', 'Source text'), ('TGT', 'Target text'), ('REF', 'Reference text'), ('BAD', 'Bad reference'), ('CHK', 'Redundant check')], db_index=True, max_length=5, verbose_name='Item type')),
                ('segmentID', models.CharField(help_text='(max. 1000 characters)', max_length=1000, verbose_name='Segment ID')),
                ('segmentText', models.TextField(help_text='(max. 2000 characters)', max_length=2000, verbose_name='Segment text')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textsegment_activated_by', related_query_name='evaldata_textsegments', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textsegment_completed_by', related_query_name='evaldata_textsegments', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textsegment_created_by', related_query_name='evaldata_textsegments', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='EvalData.metadata')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textsegment_modified_by', related_query_name='evaldata_textsegments', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textsegment_retired_by', related_query_name='evaldata_textsegments', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextPairWithContext',
            fields=[
                ('textpair_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='EvalData.textpair')),
                ('documentID', models.CharField(help_text='(max. 100 characters)', max_length=100, verbose_name='Document ID')),
                ('isCompleteDocument', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Complete document?')),
                ('sourceContextLeft', models.TextField(blank=True, null=True, verbose_name='Source context (left)')),
                ('sourceContextRight', models.TextField(blank=True, null=True, verbose_name='Source context (right)')),
                ('targetContextLeft', models.TextField(blank=True, null=True, verbose_name='Target context (left)')),
                ('targetContextRight', models.TextField(blank=True, null=True, verbose_name='Target context (right)')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
            bases=('EvalData.textpair',),
        ),
        migrations.CreateModel(
            name='TextPairWithDomain',
            fields=[
                ('textpair_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='EvalData.textpair')),
                ('documentDomain', models.CharField(help_text='(max. 1000 characters)', max_length=1000, verbose_name='Domain')),
                ('sourceURL', models.TextField(blank=True, verbose_name='Source URL')),
                ('targetURL', models.TextField(blank=True, verbose_name='Target URL')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
            bases=('EvalData.textpair',),
        ),
        migrations.CreateModel(
            name='TextSegmentWithTwoTargets',
            fields=[
                ('textsegment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='EvalData.textsegment')),
                ('target1ID', models.CharField(help_text='(max. 1000 characters)', max_length=1000, verbose_name='Item ID (1)')),
                ('target1Text', models.TextField(blank=True, verbose_name='Text (1)')),
                ('target2ID', models.CharField(help_text='(max. 1000 characters)', max_length=1000, null=True, verbose_name='Item ID (2)')),
                ('target2Text', models.TextField(blank=True, null=True, verbose_name='Text (2)')),
                ('contextLeft', models.TextField(blank=True, null=True, verbose_name='Context (left)')),
                ('contextRight', models.TextField(blank=True, null=True, verbose_name='Context (right)')),
                ('target1ContextLeft', models.TextField(blank=True, null=True, verbose_name='Target context (1)')),
                ('target2ContextLeft', models.TextField(blank=True, null=True, verbose_name='Target context (2)')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
            bases=('EvalData.textsegment',),
        ),
        migrations.CreateModel(
            name='WorkAgenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Campaign.campaign', verbose_name='Campaign')),
                ('completedTasks', models.ManyToManyField(blank=True, related_name='evaldata_workagenda_completedtasks', related_query_name='evaldata_workagendas_completed', to='EvalData.DirectAssessmentTask', verbose_name='Completed tasks')),
                ('openTasks', models.ManyToManyField(blank=True, related_name='evaldata_workagenda_opentasks', related_query_name='evaldata_workagendas_open', to='EvalData.DirectAssessmentTask', verbose_name='Open tasks')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='TextPairWithImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('itemID', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Item ID')),
                ('itemType', models.CharField(choices=[('SRC', 'Source text'), ('TGT', 'Target text'), ('REF', 'Reference text'), ('BAD', 'Bad reference'), ('CHK', 'Redundant check')], db_index=True, max_length=5, verbose_name='Item type')),
                ('sourceID', models.CharField(help_text='(max. 1000 characters)', max_length=1000, verbose_name='Source ID')),
                ('sourceText', models.CharField(help_text='(max. 2000 characters)', max_length=2000, verbose_name='Source text')),
                ('targetID', models.CharField(help_text='(max. 1000 characters)', max_length=1000, verbose_name='Target ID')),
                ('targetText', models.CharField(help_text='(max. 2000 characters)', max_length=2000, verbose_name='Target text')),
                ('imageURL', models.URLField(verbose_name='image URL')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpairwithimage_activated_by', related_query_name='evaldata_textpairwithimages', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpairwithimage_completed_by', related_query_name='evaldata_textpairwithimages', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpairwithimage_created_by', related_query_name='evaldata_textpairwithimages', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='EvalData.metadata')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpairwithimage_modified_by', related_query_name='evaldata_textpairwithimages', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_textpairwithimage_retired_by', related_query_name='evaldata_textpairwithimages', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskAgenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_completed_tasks', models.ManyToManyField(blank=True, related_name='evaldata_taskagenda_completedtasks', related_query_name='evaldata_taskagendas_completed', to='EvalData.ObjectID', verbose_name='Completed tasks')),
                ('_open_tasks', models.ManyToManyField(blank=True, related_name='evaldata_taskagenda_opentasks', related_query_name='evaldata_taskagendas_open', to='EvalData.ObjectID', verbose_name='Open tasks')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Campaign.campaign', verbose_name='Campaign')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'permissions': (('reset_taskagenda', 'Can reset task agendas'),),
            },
        ),
        migrations.CreateModel(
            name='PairwiseAssessmentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmenttask_activated_by', related_query_name='evaldata_pairwiseassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_pairwiseassessmenttask_assignedTo', related_query_name='evaldata_pairwiseassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmenttask_batchData', related_query_name='evaldata_pairwiseassessmenttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmenttask_campaign', related_query_name='evaldata_pairwiseassessmenttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmenttask_completed_by', related_query_name='evaldata_pairwiseassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmenttask_created_by', related_query_name='evaldata_pairwiseassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmenttask_modified_by', related_query_name='evaldata_pairwiseassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmenttask_retired_by', related_query_name='evaldata_pairwiseassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('items', models.ManyToManyField(related_name='evaldata_pairwiseassessmenttask_items', related_query_name='evaldata_pairwiseassessmenttasks', to='EvalData.TextSegmentWithTwoTargets', verbose_name='Items')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiModalAssessmentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmenttask_activated_by', related_query_name='evaldata_multimodalassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_multimodalassessmenttask_assignedTo', related_query_name='evaldata_multimodalassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmenttask_batchData', related_query_name='evaldata_multimodalassessmenttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmenttask_campaign', related_query_name='evaldata_multimodalassessmenttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmenttask_completed_by', related_query_name='evaldata_multimodalassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmenttask_created_by', related_query_name='evaldata_multimodalassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('items', models.ManyToManyField(related_name='evaldata_multimodalassessmenttask_items', related_query_name='evaldata_multimodalassessmenttasks', to='EvalData.TextPairWithImage', verbose_name='Items')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmenttask_modified_by', related_query_name='evaldata_multimodalassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmenttask_retired_by', related_query_name='evaldata_multimodalassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiModalAssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmentresult_activated_by', related_query_name='evaldata_multimodalassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmentresult_completed_by', related_query_name='evaldata_multimodalassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmentresult_created_by', related_query_name='evaldata_multimodalassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmentresult_item', related_query_name='evaldata_multimodalassessmentresults', to='EvalData.textpairwithimage', verbose_name='Item')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmentresult_modified_by', related_query_name='evaldata_multimodalassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmentresult_retired_by', related_query_name='evaldata_multimodalassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_multimodalassessmentresult_task', related_query_name='evaldata_multimodalassessmentresults', to='EvalData.multimodalassessmenttask', verbose_name='Task')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='directassessmenttask',
            name='items',
            field=models.ManyToManyField(related_name='evaldata_directassessmenttask_items', related_query_name='evaldata_directassessmenttasks', to='EvalData.TextPair', verbose_name='Items'),
        ),
        migrations.AddField(
            model_name='directassessmenttask',
            name='modifiedBy',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmenttask_modified_by', related_query_name='evaldata_directassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by'),
        ),
        migrations.AddField(
            model_name='directassessmenttask',
            name='retiredBy',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmenttask_retired_by', related_query_name='evaldata_directassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by'),
        ),
        migrations.CreateModel(
            name='DirectAssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentresult_activated_by', related_query_name='evaldata_directassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentresult_completed_by', related_query_name='evaldata_directassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentresult_created_by', related_query_name='evaldata_directassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentresult_item', related_query_name='evaldata_directassessmentresults', to='EvalData.textpair', verbose_name='Item')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentresult_modified_by', related_query_name='evaldata_directassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentresult_retired_by', related_query_name='evaldata_directassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentresult_task', related_query_name='evaldata_directassessmentresults', to='EvalData.directassessmenttask', verbose_name='Task')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentLongDocumentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumenttask_activated_by', related_query_name='evaldata_directassessmentlongdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_directassessmentlongdocumenttask_assignedTo', related_query_name='evaldata_directassessmentlongdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumenttask_batchData', related_query_name='evaldata_directassessmentlongdocumenttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumenttask_campaign', related_query_name='evaldata_directassessmentlongdocumenttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumenttask_completed_by', related_query_name='evaldata_directassessmentlongdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumenttask_created_by', related_query_name='evaldata_directassessmentlongdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumenttask_modified_by', related_query_name='evaldata_directassessmentlongdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumenttask_retired_by', related_query_name='evaldata_directassessmentlongdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('items', models.ManyToManyField(related_name='evaldata_directassessmentlongdocumenttask_items', related_query_name='evaldata_directassessmentlongdocumenttasks', to='EvalData.TextPairWithContext', verbose_name='Items')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentDocumentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumenttask_activated_by', related_query_name='evaldata_directassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_directassessmentdocumenttask_assignedTo', related_query_name='evaldata_directassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumenttask_batchData', related_query_name='evaldata_directassessmentdocumenttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumenttask_campaign', related_query_name='evaldata_directassessmentdocumenttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumenttask_completed_by', related_query_name='evaldata_directassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumenttask_created_by', related_query_name='evaldata_directassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumenttask_modified_by', related_query_name='evaldata_directassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumenttask_retired_by', related_query_name='evaldata_directassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('items', models.ManyToManyField(related_name='evaldata_directassessmentdocumenttask_items', related_query_name='evaldata_directassessmentdocumenttasks', to='EvalData.TextPairWithContext', verbose_name='Items')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentDocLevelDAWindowTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowtask_activated_by', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_directassessmentdocleveldawindowtask_assignedTo', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowtask_batchData', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowtask_campaign', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowtask_completed_by', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowtask_created_by', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowtask_modified_by', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowtask_retired_by', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('items', models.ManyToManyField(related_name='evaldata_directassessmentdocleveldawindowtask_items', related_query_name='evaldata_directassessmentdocleveldawindowtasks', to='EvalData.TextPairWithContext', verbose_name='Items')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentContextTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontexttask_activated_by', related_query_name='evaldata_directassessmentcontexttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_directassessmentcontexttask_assignedTo', related_query_name='evaldata_directassessmentcontexttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontexttask_batchData', related_query_name='evaldata_directassessmentcontexttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontexttask_campaign', related_query_name='evaldata_directassessmentcontexttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontexttask_completed_by', related_query_name='evaldata_directassessmentcontexttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontexttask_created_by', related_query_name='evaldata_directassessmentcontexttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontexttask_modified_by', related_query_name='evaldata_directassessmentcontexttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontexttask_retired_by', related_query_name='evaldata_directassessmentcontexttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('items', models.ManyToManyField(related_name='evaldata_directassessmentcontexttask_items', related_query_name='evaldata_directassessmentcontexttasks', to='EvalData.TextPairWithContext', verbose_name='Items')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataAssessmentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmenttask_activated_by', related_query_name='evaldata_dataassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_dataassessmenttask_assignedTo', related_query_name='evaldata_dataassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmenttask_batchData', related_query_name='evaldata_dataassessmenttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmenttask_campaign', related_query_name='evaldata_dataassessmenttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmenttask_completed_by', related_query_name='evaldata_dataassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmenttask_created_by', related_query_name='evaldata_dataassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmenttask_modified_by', related_query_name='evaldata_dataassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmenttask_retired_by', related_query_name='evaldata_dataassessmenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('items', models.ManyToManyField(related_name='evaldata_dataassessmenttask_items', related_query_name='evaldata_dataassessmenttasks', to='EvalData.TextPairWithDomain', verbose_name='Items')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextSegmentWithTwoTargetsWithContext',
            fields=[
                ('textsegmentwithtwotargets_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='EvalData.textsegmentwithtwotargets')),
                ('documentID', models.CharField(help_text='(max. 100 characters)', max_length=100, verbose_name='Document ID')),
                ('isCompleteDocument', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Complete document?')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
            bases=('EvalData.textsegmentwithtwotargets',),
        ),
        migrations.CreateModel(
            name='PairwiseAssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score1', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score (1)')),
                ('score2', models.PositiveSmallIntegerField(blank=True, help_text='(value in range=[1,100])', null=True, verbose_name='Score (2)')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentresult_activated_by', related_query_name='evaldata_pairwiseassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentresult_completed_by', related_query_name='evaldata_pairwiseassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentresult_created_by', related_query_name='evaldata_pairwiseassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentresult_modified_by', related_query_name='evaldata_pairwiseassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentresult_retired_by', related_query_name='evaldata_pairwiseassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentresult_task', related_query_name='evaldata_pairwiseassessmentresults', to='EvalData.pairwiseassessmenttask', verbose_name='Task')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentresult_item', related_query_name='evaldata_pairwiseassessmentresults', to='EvalData.textsegmentwithtwotargets', verbose_name='Item')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentLongDocumentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumentresult_activated_by', related_query_name='evaldata_directassessmentlongdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumentresult_completed_by', related_query_name='evaldata_directassessmentlongdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumentresult_created_by', related_query_name='evaldata_directassessmentlongdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumentresult_modified_by', related_query_name='evaldata_directassessmentlongdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumentresult_retired_by', related_query_name='evaldata_directassessmentlongdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumentresult_task', related_query_name='evaldata_directassessmentlongdocumentresults', to='EvalData.directassessmentlongdocumenttask', verbose_name='Task')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentlongdocumentresult_item', related_query_name='evaldata_directassessmentlongdocumentresults', to='EvalData.textpairwithcontext', verbose_name='Item')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentDocumentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumentresult_activated_by', related_query_name='evaldata_directassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumentresult_completed_by', related_query_name='evaldata_directassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumentresult_created_by', related_query_name='evaldata_directassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumentresult_modified_by', related_query_name='evaldata_directassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumentresult_retired_by', related_query_name='evaldata_directassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumentresult_task', related_query_name='evaldata_directassessmentdocumentresults', to='EvalData.directassessmentdocumenttask', verbose_name='Task')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocumentresult_item', related_query_name='evaldata_directassessmentdocumentresults', to='EvalData.textpairwithcontext', verbose_name='Item')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentDocLevelDAWindowResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowresult_activated_by', related_query_name='evaldata_directassessmentdocleveldawindowresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowresult_completed_by', related_query_name='evaldata_directassessmentdocleveldawindowresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowresult_created_by', related_query_name='evaldata_directassessmentdocleveldawindowresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowresult_modified_by', related_query_name='evaldata_directassessmentdocleveldawindowresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowresult_retired_by', related_query_name='evaldata_directassessmentdocleveldawindowresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowresult_task', related_query_name='evaldata_directassessmentdocleveldawindowresults', to='EvalData.directassessmentdocleveldawindowtask', verbose_name='Task')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentdocleveldawindowresult_item', related_query_name='evaldata_directassessmentdocleveldawindowresults', to='EvalData.textpairwithcontext', verbose_name='Item')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectAssessmentContextResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontextresult_activated_by', related_query_name='evaldata_directassessmentcontextresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontextresult_completed_by', related_query_name='evaldata_directassessmentcontextresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontextresult_created_by', related_query_name='evaldata_directassessmentcontextresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontextresult_modified_by', related_query_name='evaldata_directassessmentcontextresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontextresult_retired_by', related_query_name='evaldata_directassessmentcontextresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontextresult_task', related_query_name='evaldata_directassessmentcontextresults', to='EvalData.directassessmentcontexttask', verbose_name='Task')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_directassessmentcontextresult_item', related_query_name='evaldata_directassessmentcontextresults', to='EvalData.textpairwithcontext', verbose_name='Item')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataAssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score')),
                ('rank', models.PositiveSmallIntegerField(blank=True, help_text='(value in range=[1,100])', null=True, verbose_name='Score')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmentresult_activated_by', related_query_name='evaldata_dataassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmentresult_completed_by', related_query_name='evaldata_dataassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmentresult_created_by', related_query_name='evaldata_dataassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmentresult_modified_by', related_query_name='evaldata_dataassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmentresult_retired_by', related_query_name='evaldata_dataassessmentresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmentresult_task', related_query_name='evaldata_dataassessmentresults', to='EvalData.dataassessmenttask', verbose_name='Task')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_dataassessmentresult_item', related_query_name='evaldata_dataassessmentresults', to='EvalData.textpairwithdomain', verbose_name='Item')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PairwiseAssessmentDocumentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('requiredAnnotations', models.PositiveSmallIntegerField(help_text='(value in range=[1,50])', verbose_name='Required annotations')),
                ('batchNo', models.PositiveIntegerField(help_text='(1-based)', verbose_name='Batch number')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumenttask_activated_by', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('assignedTo', models.ManyToManyField(blank=True, db_index=True, help_text='(users working on this task)', related_name='evaldata_pairwiseassessmentdocumenttask_assignedTo', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('batchData', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumenttask_batchData', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to='Campaign.campaigndata', verbose_name='Batch data')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumenttask_campaign', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to='Campaign.campaign', verbose_name='Campaign')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumenttask_completed_by', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumenttask_created_by', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumenttask_modified_by', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumenttask_retired_by', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('items', models.ManyToManyField(related_name='evaldata_pairwiseassessmentdocumenttask_items', related_query_name='evaldata_pairwiseassessmentdocumenttasks', to='EvalData.TextSegmentWithTwoTargetsWithContext', verbose_name='Items')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PairwiseAssessmentDocumentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('dateActivated', models.DateTimeField(blank=True, null=True, verbose_name='Date activated')),
                ('dateCompleted', models.DateTimeField(blank=True, null=True, verbose_name='Date completed')),
                ('dateRetired', models.DateTimeField(blank=True, null=True, verbose_name='Date retired')),
                ('dateModified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('activated', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Activated?')),
                ('completed', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Completed?')),
                ('retired', models.BooleanField(blank=True, db_index=True, default=False, verbose_name='Retired?')),
                ('rawData', models.TextField(blank=True, editable=False, verbose_name='Raw data')),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                ('score1', models.PositiveSmallIntegerField(help_text='(value in range=[1,100])', verbose_name='Score (1)')),
                ('score2', models.PositiveSmallIntegerField(blank=True, help_text='(value in range=[1,100])', null=True, verbose_name='Score (2)')),
                ('start_time', models.FloatField(help_text='(in seconds)', verbose_name='Start time')),
                ('end_time', models.FloatField(help_text='(in seconds)', verbose_name='End time')),
                ('activatedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumentresult_activated_by', related_query_name='evaldata_pairwiseassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Activated by')),
                ('completedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumentresult_completed_by', related_query_name='evaldata_pairwiseassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Completed by')),
                ('createdBy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumentresult_created_by', related_query_name='evaldata_pairwiseassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modifiedBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumentresult_modified_by', related_query_name='evaldata_pairwiseassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('retiredBy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumentresult_retired_by', related_query_name='evaldata_pairwiseassessmentdocumentresults', to=settings.AUTH_USER_MODEL, verbose_name='Retired by')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumentresult_task', related_query_name='evaldata_pairwiseassessmentdocumentresults', to='EvalData.pairwiseassessmentdocumenttask', verbose_name='Task')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaldata_pairwiseassessmentdocumentresult_item', related_query_name='evaldata_pairwiseassessmentdocumentresults', to='EvalData.textsegmentwithtwotargetswithcontext', verbose_name='Item')),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
    ]
